service: serverlessproject
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

frameworkVersion: "2"

provider:
    name: aws
    runtime: nodejs12.x
    lambdaHashingVersion: 20201221
    profile: serverlessUser
    stage: dev
    region: us-east-1

plugins:
    - serverless-s3-sync
    - serverless-offline

package:
    individually: true

custom:
    bucketName: provilling-react-app
    s3Sync:
        - bucketName: ${self:custom.bucketName}
          localDir: provilling/build/

resources:
    Resources:
        ReactAppBucket:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: ${self:custom.bucketName}
                AccessControl: PublicRead
                WebsiteConfiguration:
                    IndexDocument: index.html
                    ErrorDocument: index.html
        S3AccessPolicy:
            Type: AWS::S3::BucketPolicy
            Properties:
                Bucket:
                    Ref: ReactAppBucket
                PolicyDocument:
                    Statement:
                        Action:
                            - "s3:GetObject"
                        Effect: Allow
                        Resource: arn:aws:s3:::${self:custom.bucketName}/*
                        Principal: "*"
        CloudFrontDistribution:
            Type: AWS::CloudFront::Distribution
            Properties:
                DistributionConfig:
                    Enabled: true
                    Origins:
                        - DomainName: ${self:custom.bucketName}.s3.amazonaws.com
                          Id: ReactApp
                          CustomOriginConfig:
                              HTTPPort: 80
                              HTTPSPort: 443
                              OriginProtocolPolicy: https-only
                    DefaultRootObject: index.html
                    CustomErrorResponses:
                        - ErrorCode: 404
                          ResponseCode: 200
                          ResponsePagePath: /index.html
                    DefaultCacheBehavior:
                        AllowedMethods:
                            - DELETE
                            - GET
                            - HEAD
                            - OPTIONS
                            - PATCH
                            - POST
                            - PUT
                        TargetOriginId: ReactApp
                        ForwardedValues:
                            QueryString: false
                            Cookies:
                                Forward: none
                        ViewerProtocolPolicy: redirect-to-https
                    ViewerCertificate:
                        CloudFrontDefaultCertificate: true
        CognitoUserPool:
            Type: AWS::Cognito::UserPool
            Properties:
                UserPoolName: ${self:provider.stage}-user-pool
                UsernameAttributes:
                    - email
                AutoVerifiedAttributes:
                    - email
        CognitoUserPoolClient:
            Type: AWS::Cognito::UserPoolClient
            Properties:
                ClientName: ${self:provider.stage}-user-pool-client
                UserPoolId:
                    Ref: CognitoUserPool
                ExplicitAuthFlows:
                    - ADMIN_NO_SRP_AUTH
                GenerateSecret: false
